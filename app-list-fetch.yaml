config:
  target: "{{ $processEnvironment.SALEOR_GRAPHQL_URL }}"
  phases:
    - duration: 100
      arrivalRate: 1
      name: "One request per second"
  ensure:
    maxErrorRate: 1
  plugins:
    metrics-by-endpoint: {}
  reporting:
    - json: { export: "results.json" }

scenarios:
  - name: "GraphQL Query Timing Test"
    flow:
      - post:
          url: ""
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            query: |
              {
                apps(first: 100) {
                  edges {
                    node {
                      id
                      name
                      created
                      isActive
                      type
                      brand {
                        logo {
                          default(format: WEBP, size: 24)
                        }
                      }
                      webhooks {
                        failedDelivers: eventDeliveries(
                          first: 1
                          filter: {status: FAILED}
                          sortBy: {field: CREATED_AT, direction: DESC}
                        ) {
                          edges {
                            node {
                              id
                              createdAt
                              attempts(first: 1, sortBy: {field: CREATED_AT, direction: DESC}) {
                                edges {
                                  node {
                                    id
                                    status
                                    createdAt
                                  }
                                }
                              }
                            }
                          }
                        }
                        pendingDelivers: eventDeliveries(
                          first: 6
                          filter: {status: PENDING}
                          sortBy: {field: CREATED_AT, direction: DESC}
                        ) {
                          edges {
                            node {
                              id
                              attempts(first: 6, sortBy: {field: CREATED_AT, direction: DESC}) {
                                edges {
                                  node {
                                    id
                                    status
                                    createdAt
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
          expect:
            - statusCode: 200
